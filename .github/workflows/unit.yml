name: Unit Tests

on:
    push:
    pull_request:
        branches: [ "main" ]

jobs:
    build-and-test:
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ ubuntu-latest, macos-latest, windows-latest ]
                arch: [ x64, arm64 ]
                config: [ release ]

        steps:
            - name: Checkout source
              uses: actions/checkout@v3
              with:
                submodules: 'recursive'
                fetch-depth: 1

            - name: Set PLATFORM variable
              shell: bash
              run: |
                if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                    echo "PLATFORM=apple" >> $GITHUB_ENV
                elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
                    echo "PLATFORM=linux" >> $GITHUB_ENV
                else
                    echo "PLATFORM=windows" >> $GITHUB_ENV
                fi

            - name: Install Ninja (Ubuntu)
              if: matrix.os == 'ubuntu-latest'
              run: |
                sudo apt update
                sudo apt install -y ninja-build

            - name: Install Ninja (macOS)
              if: matrix.os == 'macos-latest'
              run: brew install ninja

            - name: Configure
              shell: bash
              run: |
                cmake --preset "${{ matrix.arch }}-${PLATFORM}"

            - name: Build
              shell: bash
              run: |
                cmake --build --preset "${{ matrix.arch }}-${PLATFORM}-${{ matrix.config }}"

            - name: Test
              shell: bash
              run: |
                ctest --preset "${{ matrix.arch }}-${PLATFORM}-${{ matrix.config }}"
